{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eve\\\\osa1\\\\anekdootit\\\\src\\\\App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    label,\n    onclick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      margin: 10\n    },\n    onClick: onclick,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 40\n  }, this);\n};\n\n_c = Button;\n\nconst Anecdote = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 32\n  }, this);\n};\n\n_c2 = Anecdote;\n\nconst MostVotes = _ref3 => {\n  let {\n    votes,\n    anecdotes\n  } = _ref3;\n  const highestVoteCount = Math.max(...votes);\n\n  if (highestVoteCount === 0) {\n    return null;\n  }\n\n  const mostPopular = votes.indexOf(highestVoteCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"anecdote with most votes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Anecdote, {\n      text: anecdotes[mostPopular]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"has \", highestVoteCount, \" votes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }, this);\n};\n\n_c3 = MostVotes;\n\nclass Anecdotes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      votes: new Array(this.props.anecdotes.length).fill(0)\n    };\n  }\n\n  getSelectRandomAnecdote() {\n    return () => {\n      this.setState({\n        selected: Math.floor(Math.random() * this.props.anecdotes.length)\n      });\n    };\n  }\n\n  getVoteAnecdote(id) {\n    return () => {\n      this.setState(_ref4 => {\n        let {\n          votes\n        } = _ref4;\n        const updatedVotes = [...votes];\n        ++updatedVotes[id];\n        return {\n          votes: updatedVotes\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      anecdotes\n    } = this.props;\n    const {\n      selected,\n      votes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Anecdote, {\n        text: anecdotes[selected]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"next anecdote\",\n        onclick: this.getSelectRandomAnecdote()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        label: \"vote\",\n        onclick: this.getVoteAnecdote(selected)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MostVotes, {\n        votes: votes,\n        anecdotes: anecdotes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst App = () => /*#__PURE__*/_jsxDEV(Anecdotes, {\n  anecdotes: anecdotes\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 19\n}, this);\n\n_c4 = App;\nconst anecdotes = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'];\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Anecdote\");\n$RefreshReg$(_c3, \"MostVotes\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/Eve/osa1/anekdootit/src/App.js"],"names":["React","ReactDOM","Button","label","onclick","margin","Anecdote","text","MostVotes","votes","anecdotes","highestVoteCount","Math","max","mostPopular","indexOf","Anecdotes","Component","constructor","props","state","selected","Array","length","fill","getSelectRandomAnecdote","setState","floor","random","getVoteAnecdote","id","updatedVotes","render","App","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = ({ label, onclick }) => <button style={{ margin: 10 }} onClick={onclick}>{label}</button>;\n\nconst Anecdote = ({ text }) => <p>{text}</p>;\n\nconst MostVotes = ({ votes, anecdotes }) => {\n  const highestVoteCount = Math.max(...votes);\n  if (highestVoteCount === 0) {\n    return null;\n  }\n  const mostPopular = votes.indexOf(highestVoteCount);\n  return (<div>\n    <h1>anecdote with most votes:</h1>\n    <Anecdote text={anecdotes[mostPopular]} />\n    <p>has {highestVoteCount} votes</p>\n  </div>);\n};\n\nclass Anecdotes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0,\n      votes: new Array(this.props.anecdotes.length).fill(0),\n    };\n  }\n\n  getSelectRandomAnecdote() {\n    return () => {\n      this.setState({ selected: Math.floor(Math.random() * this.props.anecdotes.length) });\n    };\n  }\n\n  getVoteAnecdote(id) {\n    return () => {\n      this.setState(({ votes }) => {\n        const updatedVotes = [...votes];\n        ++updatedVotes[id];\n        return { votes: updatedVotes };\n      });\n    };\n  }\n\n\n  render() {\n    const { anecdotes } = this.props;\n    const { selected, votes } = this.state;\n    return (\n      <div>\n        <Anecdote text={anecdotes[selected]} />\n        <br />\n        <Button label=\"next anecdote\" onclick={this.getSelectRandomAnecdote()} />\n        <Button label=\"vote\" onclick={this.getVoteAnecdote(selected)} />\n        <MostVotes votes={votes} anecdotes={anecdotes} />\n      </div>\n    );\n  }\n}\n\nconst App = () => <Anecdotes anecdotes={anecdotes} />;\n\nconst anecdotes = [\n  'If it hurts, do it more often',\n  'Adding manpower to a late software project makes it later!',\n  'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n  'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n  'Premature optimization is the root of all evil.',\n  'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n];\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport default App"]},"metadata":{},"sourceType":"module"}